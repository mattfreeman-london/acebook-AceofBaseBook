addons:
  code_climate:
    repo_token:
      secure: "JHL+ecVebP8AYCeVvmmUewhbJAduENI/Lko68WKRo4yFYrS0ncCft3Vwa1qHds3vAuhNlwWJLRkfP1LWiN95YokMLcLGSmAddQqUc3spwbouGjbbbnYeBm1adSDe/niEywRVXrJ2lXqw6DZGsL/xxZfqYWbQ
      exUeaVoGxJxfBKjFqzyyxK23OrzKuzpQDGNUKot0Ix9/g+fvldV7DqxgNHXKcpCQXqbwi0kOYKN8tox1RaozWYk2OQJgdGMrteA0f0xKfCuWrIDeU8P1Iiwi8PlzU+RHJ6luz9/06kHCl/N0LM/yFIW386Vnb3Gpr9MuffP
      IrmeVHfhkgurXSSl0NjwVk01N/UtCYsChBYYQXTd8KrxiKi+txFf57acdbRbXNScigapIAhXZbpZGUIjyW9UMLkJ6QU11zGJfed2DLkl+c/oF4W6a6x4AihV7NjS+VEZRePQhXvMADL95+l7xoZfnHW56AR3jE7MKZpykzE
      GY0J3f7QGeQ+h66oBcqxuE85S6/DviEpH1lIjTB0JwEwPC+cBuvhst1U3sXiFeVcnrxt5dQMKQOcfm9KJFV7MCaoLUAWRUsTW02RIY+5PvDTDSWiri15CBj6mWFo1Iz+3VBJpNxebY2dl363HzhlkMKwMHPPDyjU9z1+E+Y
      qoZVgHshwQQpqku2iSFSK/O3Lc="

# multiple tests suites
# working example can be found at https://github.com/scottohara/loot

language: ruby

# Cache gems
cache:
  bundler: true
  directories:
    - node_modules

services: postgresql

addons:
  chrome: stable
  #firefox: latest

env:
  global:
    CC_TEST_REPORTER_ID=ABC123

before_install:
  - nvm install                         # Install node version from .nvmrc
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  #- export DISPLAY=:99.0                # Display number for xvfb (for headless browser testing)
  #- sh -e /etc/init.d/xvfb start        # Start xvfb (for headless browser testing)

install:
  - bundle install --without production --path=${BUNDLE_PATH:-vendor/bundle}  # Install ruby gems, excluding production only gems such as unicorn (already present by default in Travis)
  - npm install                         # Install npm dependencies
  #- npm install karma-firefox-launcher codeclimate-test-reporter

# Setup the database
before_script: bundle exec rake db:create db:migrate

# Run the test suites
script:
  - bundle exec rubocop -DESP           # Backend linting
  - bundle exec rake                    # Backend specs
  #- npm test -- --browsers Firefox      # Frontend specs
  - npm test                            # Frontend linting & specs
  - bundle exec rspec spec
# Pipe the coverage data to Code Climate
after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json
